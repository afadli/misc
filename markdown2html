# this is a markdown to html using regex

def entry(request, title):
     content = util.get_entry(title)
     if content is None:
         return render(request, "encyclopedia/not_found.html")

     # Handle bold
     content = re.sub("\*\*(.*?)\*\*", "<strong>\\1</strong>", content)

     # Handle links
     content = re.sub("\[(.*?)\]\((.*?)\)", "<a href=\"\\2\">\\1</a>", content)

     # Split content into lines
     lines = content.splitlines()

     # Assemble result
     html = ""
     current_list = None
     for line in lines:

         # Handle continuations of lists
         if current_list is not None:
             if line.startswith("* "):
                 current_list += f"<li>{line[2:]}</li>"
                 continue
             else:
                 current_list += "</ul>"
                 html += current_list
                 current_list = None

         # Handle headings
         if line.startswith("#"):
             count = 0
             for i in range(6):
                 if line[i] == "#":
                     count += 1
                 else:
                     break
             html += f"<h{count}>{line.lstrip('# ')}</h{count}>"

         # Handle start of lists
         elif current_list is None and line.startswith("* "):
             current_list = f"<ul><li>{line[2:]}</li>"

         # Handle ordinary paragraphs
         else:
             html += f"<p>{line}</p>"

     # Handle lists at end of page
     if current_list is not None:
         current_list += "</ul>"
         html += current_list

     return render(request, "encyclopedia/entry.html", {
         "title": title,
         "html": html
     })
